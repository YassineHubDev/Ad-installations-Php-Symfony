security:
    encoders:
        App\Entity\User:
            algorithm: argon2i

    
    role_hierarchy:
        ROLE_MAGASIN: 
             - ROLE_USER
             - ROLE_MAGASIN
        ROLE_CLIENT: 
             - ROLE_USER
             - ROLE_CLIENT
        ROLE_ADMIN:
             - ROLE_MAGASIN
             - ROLE_CLIENT

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: apiKey 
                
#        fos_userbundle:
#            id: fos_user.user_provider.username_email
        # used to reload user from session & other features (e.g. switch_user)
                    
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            user_checker: security.user_checker
            form_login:
                csrf_token_generator: security.csrf.token_manager
                login_path: app_login
                check_path: app_login
                
                #provider: fos_userbundle
                #always_use_default_target_path: false
                default_target_path: /
                
            logout:
                path: app_logout
                target: app_home
            anonymous: true
            
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\AppAuthenticator         
            stateless: false

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, role: ROLE_ADMIN }
        - { path: ^/easy-admin, role: ROLE_CLIENT}
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/form-magasin, role: ROLE_MAGASIN }
        - { path: ^/form-client, role: ROLE_CLIENT }


        # - { path: ^/profile, roles: ROLE_USER }
        
    